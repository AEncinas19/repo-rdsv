apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "accesschart.fullname" . }}
  labels:
    {{- include "accesschart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "accesschart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        k8s.v1.cni.cncf.io/networks: '[
            {
              "name": "podnet",
              "interface": "eth1",
              "ips": ["10.0.0.1/24"]
            },
            {
              "name": "accessnet1",
              "interface": "net1"
            }
          ]'
      labels:
        {{- include "accesschart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "accesschart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: accesspod
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
            privileged: true
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: ["sh", "-c", "tail -f /dev/null"]
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
        - name: cadvisor
          securityContext:
            capabilities:
              add: ["NET_ADMIN"]
            privileged: true
          image: gcr.io/cadvisor/cadvisor:latest
          command: ["sh", "-c", "tail -f /dev/null"]
          ports:
          - containerPort: 8080
          volumeMounts:
          - name: rootfs-volume
            mountPath: /rootfs
            readOnly: true
          - name: var-run-volume
            mountPath: /var/run
          - name: sys-volume
            mountPath: /sys
            readOnly: true
          - name: var-lib-docker-volume
            mountPath: /var/lib/docker
            readOnly: true
      volumes:
        - name: rootfs-volume
          hostPath:
            path: /
        - name: var-run-volume
          hostPath:
            path: /var/run
        - name: sys-volume
          hostPath:
            path: /sys
        - name: var-lib-docker-volume
          hostPath:
            path: /var/lib/docker
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
